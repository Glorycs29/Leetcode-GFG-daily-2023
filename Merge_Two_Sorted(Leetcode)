/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* head1, ListNode* head2) {
    // code here

        if(head1==NULL)return head2;

        if(head2==NULL)return head1;

        if(head1->val>head2->val)swap(head1,head2);

        ListNode* res=head1;

    while(head1!=NULL and head2!=NULL){
        ListNode* temp=NULL;

        while(head1!=NULL and head1->val<=head2->val){
            temp=head1;
            head1=head1->next;
        }

        temp->next=head2;
        swap(head1,head2);

    }
    return res;
    }  
};
